<!--?xml version="1.0" encoding="UTF-8"?-->
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="http://msteveb.github.com/autosetup/">
  <id>http://msteveb.github.com/autosetup/</id>
  <title>autosetup News</title>
  <updated>2019-06-21T00:00:00Z</updated>
  <link rel="alternate" href="http://msteveb.github.com/autosetup/" type="text/html">
  <link rel="self" href="http://msteveb.github.com/autosetup/feed.xml" type="application/atom+xml">
  <author>
    <name>steveb@workware.net.au</name>
    <uri>mailto:steveb@workware.net.au</uri>
  </author>
  <entry>
    <id>tag:msteveb.github.com,2019-06-21:/autosetup/articles/autosetup-069/</id>
    <title type="html">autosetup 0.6.9</title>
    <published>2019-06-21T00:00:00Z</published>
    <updated>2019-06-21T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/autosetup-069/" type="text/html">
    <content type="html">&lt;p&gt;&lt;strong&gt;autosetup&lt;/strong&gt; v0.6.9 has been released.&lt;/p&gt;

&lt;p&gt;As there has been no release notes for a while, here are the changes since v0.6.2&lt;/p&gt;

&lt;p&gt;Major improvements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make-template: Support nesting, better conditionals, @define and @include&lt;/li&gt;
  &lt;li&gt;Make it possible to use a system-installed autosetup.  e.g. autosetup –sysinstall=/usr/local&lt;/li&gt;
  &lt;li&gt;Add initial pkg-config support&lt;/li&gt;
  &lt;li&gt;Add an extensible init system with autosetup –init=&amp;lt;type&amp;gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Minor changes and bug fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;define-append now ignores empty values&lt;/li&gt;
  &lt;li&gt;define-append: improved check for duplicates&lt;/li&gt;
  &lt;li&gt;cc-shared: always use -fPIC&lt;/li&gt;
  &lt;li&gt;cc-shared: Add support for RPATH&lt;/li&gt;
  &lt;li&gt;cc-shared: Add $STRIPLIBFLAGS&lt;/li&gt;
  &lt;li&gt;system: add support for –runstatedir&lt;/li&gt;
  &lt;li&gt;system: add abs_top_srcdir and abs_top_builddir&lt;/li&gt;
  &lt;li&gt;options-defaults provides a way to change the default options from auto.def&lt;/li&gt;
  &lt;li&gt;Never honor prefix for /var, honor only if != /usr for /etc&lt;/li&gt;
  &lt;li&gt;make-template: Don’t write file if unchanged&lt;/li&gt;
  &lt;li&gt;Allow $autosetup_tclsh to select the preferred tclsh&lt;/li&gt;
  &lt;li&gt;Add cc-path-progs&lt;/li&gt;
  &lt;li&gt;cc: drop empty -cflags, -includes, -libs&lt;/li&gt;
  &lt;li&gt;cc: tests should use LIBS and LDFLAGS&lt;/li&gt;
  &lt;li&gt;opt-bool: allow boolean options multiple times&lt;/li&gt;
  &lt;li&gt;opt-bool: accepts -nodefault option&lt;/li&gt;
  &lt;li&gt;cc-lib: add cc-check-alloca and cc-signal-return-type&lt;/li&gt;
  &lt;li&gt;Fix cc-check-members for members of structs&lt;/li&gt;
  &lt;li&gt;Set srcdir to a fully qualified path&lt;/li&gt;
  &lt;li&gt;Add support for undefine&lt;/li&gt;
  &lt;li&gt;Allow –init and –install to be combined&lt;/li&gt;
  &lt;li&gt;Update config.{sub,guess} from automake-1.15&lt;/li&gt;
  &lt;li&gt;Add ‘cctest -nooutput 1’ to consider any compiler output as an error&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incompatibilities introduced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Syntax of @if statements has changed in make-template&lt;/li&gt;
  &lt;li&gt;Remove –with-xxx and –without-xxx synonyms&lt;/li&gt;
  &lt;li&gt;opt-val now returns a list&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2011-07-19:/autosetup/articles/autoconf-migration/</id>
    <title type="html">Automatic autoconf migration tool</title>
    <published>2011-07-19T00:00:00Z</published>
    <updated>2011-07-19T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/autoconf-migration/" type="text/html">
    <content type="html">&lt;p&gt;Although &lt;strong&gt;autosetup&lt;/strong&gt; configurations are generally easy to create,
developers moving a complex project from &lt;strong&gt;autoconf&lt;/strong&gt; to autosetup
may still find it tedious to create the &lt;strong&gt;auto.def&lt;/strong&gt; configuration
file.&lt;/p&gt;

&lt;p&gt;To simplify migration from autoconf, autosetup includes a migration
tool which will automatically convert a &lt;strong&gt;configure.in&lt;/strong&gt; or &lt;strong&gt;configure.ac&lt;/strong&gt;
file to an auto.def file.&lt;/p&gt;

&lt;p&gt;Consider the following migration of &lt;a href="http://tinytcl.sourceforge.net/"&gt;tinytcl&lt;/a&gt;:&lt;/p&gt;

&lt;pre class="sh_unix"&gt;
$ cd tinytcl
$ ~/src/autosetup.git/migrate-autoconf
Migrating configure.ac to auto.def
Created auto.def. Now edit to resolve items marked XXX
$ ~/src/autosetup.git/autosetup --install
Installed autosetup v0.6.2 to autosetup/
I see configure, but not created by autosetup, so I won't overwrite it.
Use autosetup --init --force to overwrite.
$ ./autosetup/autosetup --init --force
I will overwrite the existing configure because you used --force.
&lt;/pre&gt;

&lt;p&gt;Now the migrated auto.def can be edited. Before editing it looks something like this:&lt;/p&gt;

&lt;pre class="sh_autosetup"&gt;
# Created by migrate-autoconf - fix items marked XXX

use cc cc-lib

options {
    shared=0         =&amp;gt;  {Build a shared library}
    history=0        =&amp;gt;  {Enable history support}
    debug=0          =&amp;gt;  {Enable debugging command: cmdtrace}
    fork=1           =&amp;gt;  {Do not use fork (no exec, etc.)}
    syslog=0         =&amp;gt;  {Build the syslog extension}
}

#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.


# XXX autosetup automatically substitutes all define'd values
#     In general, simply 'define' the value rather than using a shell
#     variable and AC_SUBST.
#
# XXX AC_SUBST TARGET_PLATFORM $ac_cv_host

# Checks for programs.

# XXX TINYTCL_IS_STATIC=1
if {[opt-bool shared]} {
    # XXX if test "x$enableval" = "xyes" ; then
    msg-result "* creating shared library"
    # XXX TINYTCL_IS_STATIC=
    # XXX fi
}
# XXX AC_SUBST TINYTCL_IS_STATIC $TINYTCL_IS_STATIC
...
&lt;/pre&gt;

&lt;p&gt;After editing, &lt;em&gt;auto.def&lt;/em&gt; looks more like:&lt;/p&gt;

&lt;pre class="sh_autosetup"&gt;
...
define TARGET_PLATFORM [get-define host]

define TINYTCL_IS_STATIC 1
if {[opt-bool shared]} {
    msg-result "* creating shared library"
    define TINYTCL_IS_STATIC 0
}
...
&lt;/pre&gt;

&lt;p&gt;The final edited version is available at in the autosetup repository
as &lt;a href="https://github.com/msteveb/autosetup/blob/master/examples/migration/tinytcl/auto.def.edited"&gt;auto.def.edited&lt;/a&gt;
along with additional examples.&lt;/p&gt;

&lt;p&gt;Note that &lt;strong&gt;migrate-autoconf&lt;/strong&gt; only understands a common subset of autoconf macros and
uses various heuristics to perform the migration. Nonetheless, migrate-autoconf can 
significantly speed up migration from autoconf.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2011-07-14:/autosetup/articles/fossil-adopts-autosetup/</id>
    <title type="html">Fossil adopts autosetup</title>
    <published>2011-07-14T00:00:00Z</published>
    <updated>2011-07-14T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/fossil-adopts-autosetup/" type="text/html">
    <content type="html">&lt;p&gt;Recently the &lt;a href="http://fossil-scm.org/"&gt;Fossil SCM&lt;/a&gt; has been adopted
by &lt;a href="http://wiki.tcl.tk/"&gt;Tcl/Tk&lt;/a&gt; as a replacement for CVS.  Now the
Tcl-based &lt;a href="http://msteveb.github.com/autosetup/"&gt;autosetup&lt;/a&gt; has
been adopted as the development configuration system for
&lt;a href="http://www.fossil-scm.org/"&gt;Fossil&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fossil is similar to many open source projects that are required
to support a number of different platforms. The obvious approach
is to use autoconf and possibly automake, but &lt;a href="http://identi.ca/group/fossil#notice-76160895"&gt;many people&lt;/a&gt;
find that approach &lt;a href="http://www.mail-archive.com/fossil-users@lists.fossil-scm.org/msg04899.html"&gt;frustrating&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some of the immediate benefits of autosetup are support for cross compilation
and easily allowing Fossil to be build with different options.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2011-07-08:/autosetup/articles/msys-mingw-support/</id>
    <title type="html">MSYS/MinGW support</title>
    <published>2011-07-08T00:00:00Z</published>
    <updated>2011-07-08T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/msys-mingw-support/" type="text/html">
    <content type="html">&lt;p&gt;Apparently there is considerable interest in supporting builds
within &lt;a href="http://www.mingw.org/wiki/MSYS"&gt;MSYS/MinGW&lt;/a&gt; for Windows
rather than cygwin or cross compiling MinGW from (e.g.) Linux.&lt;/p&gt;

&lt;p&gt;The main difficulty in supporting this platform is that MinGW
doesn’t support fork/exec (or actually vfork/exec) and thus &lt;code&gt;exec&lt;/code&gt;
support in the bootstrap jimsh is limited.&lt;/p&gt;

&lt;p&gt;Fortunately, autosetup has few requirements of &lt;code&gt;exec&lt;/code&gt; and these
limitations can be worked around, along with other differences
such as the use of backlashes in paths.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;autosetup running under the MSYS bash shell&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="sh_unix"&gt;
$ cd examples/typical
$ ./configure
No installed jimsh or tclsh, building local bootstrap jimsh0
Host System...i686-pc-mingw32
Build System...i686-pc-mingw32
C compiler... gcc -g -O2
C++ compiler... c++ -g -O2
Checking for stdlib.h...ok
Checking for long long...ok
Checking for sizeof long long...8
Checking for sizeof void *...4
Checking for sys/un.h...not found
Checking for regcomp...not found
Checking for waitpid...not found
Checking for sigaction...not found
Checking for sys_signame...not found
Checking for sys_siglist...not found
Checking for syslog...not found
Checking for opendir...ok
Checking for readlink...not found
Checking for sleep...not found
Checking for usleep...ok
Checking for pipe...not found
Checking for inet_ntop...not found
Checking for getaddrinfo...not found
Enabling UTF-8
Building static library
Created config.h
Created Makefile from Makefile.in
&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2011-07-06:/autosetup/articles/autosetup-062/</id>
    <title type="html">autosetup 0.6.2</title>
    <published>2011-07-06T00:00:00Z</published>
    <updated>2011-07-06T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/autosetup-062/" type="text/html">
    <content type="html">&lt;p&gt;&lt;strong&gt;autosetup&lt;/strong&gt; has seen continuing improvements recently, so I've bumped the version to 0.6.2&lt;/p&gt;

&lt;p&gt;Here is a summary of recent changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make-autoconf-h is now deprecated in favour of the more flexible make-config-header&lt;/li&gt;
  &lt;li&gt;New: cc-check-defines, cc-check-decls&lt;/li&gt;
  &lt;li&gt;New module: cc-lib contains cc-check-lfs and cc-check-endian&lt;/li&gt;
  &lt;li&gt;Include files are automatically checked as needed&lt;/li&gt;
  &lt;li&gt;Improved documentation&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2011-05-05:/autosetup/articles/2011-05-05/</id>
    <title type="html">New Website Launched</title>
    <published>2011-05-05T00:00:00Z</published>
    <updated>2011-05-05T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/2011-05-05/" type="text/html">
    <content type="html">&lt;p&gt;The &lt;strong&gt;autosetup&lt;/strong&gt; project has a new &lt;a href="http://msteveb.github.com/autosetup/"&gt;website&lt;/a&gt;
with better, more approachable documentation.&lt;/p&gt;

&lt;p&gt;The new website includes separate documentation for &lt;a href="/user/"&gt;users&lt;/a&gt; and &lt;a href="/developer/"&gt;developers&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:msteveb.github.com,2010-12-14:/autosetup/articles/2010-12-14/</id>
    <title type="html">Initial release of autosetup</title>
    <published>2010-12-14T00:00:00Z</published>
    <updated>2010-12-14T00:00:00Z</updated>
    <link rel="alternate" href="http://msteveb.github.com/autosetup/articles/2010-12-14/" type="text/html">
    <content type="html">&lt;p&gt;The initial version of &lt;strong&gt;autosetup&lt;/strong&gt; — a faster, better autoconf — has been released.
Find it on github at &lt;a href="https://github.com/msteveb/autosetup/"&gt;https://github.com/msteveb/autosetup/&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>

